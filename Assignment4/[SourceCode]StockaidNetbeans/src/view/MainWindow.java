package view;

import domain.Store;
import javax.swing.*;
import java.awt.Color;
import java.awt.Toolkit;
import java.util.Date;
import javax.sql.rowset.spi.SyncProvider;

public class MainWindow extends javax.swing.JFrame {

    // Instatantiation
    Store inventory;
    DefaultListModel catalogModel = new DefaultListModel();

    private JLabel secondEntry;
    private JLabel thirdEntry;

    boolean isManagingProducts = false;
    boolean isManagingSuppliers = false;

    int managementMode = 1;

    // Constructor
    public MainWindow(Store inventory) {
        initComponents();
        this.inventory = inventory;
        this.catalogIC.setModel(catalogModel);
        productSC.setVisible(false);
        productOC.setVisible(false);
        supplierSC.setVisible(false);
        supplierOC.setVisible(false);
        inputPanelText5.setVisible(false);
        inputPanel5.setVisible(false);
        sendOrderIU.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        manageOrdersIU = new javax.swing.JButton();
        manageSuppliersIU = new javax.swing.JButton();
        manageProductsIU = new javax.swing.JButton();
        createIU = new javax.swing.JButton();
        updateIU = new javax.swing.JButton();
        deleteIU = new javax.swing.JButton();
        sendOrderIU = new javax.swing.JButton();
        commandSC = new javax.swing.JLabel();
        CatalogICPanel = new javax.swing.JScrollPane();
        catalogIC = new javax.swing.JList<>();
        authenticatioonSU = new javax.swing.JLabel();
        idSC = new javax.swing.JLabel();
        idOC = new javax.swing.JLabel();
        productSC = new javax.swing.JLabel();
        productOC = new javax.swing.JLabel();
        supplierSC = new javax.swing.JLabel();
        supplierOC = new javax.swing.JLabel();
        inputPanelText1 = new javax.swing.JLabel();
        inputPanel1 = new javax.swing.JTextField();
        inputPanelText2 = new javax.swing.JLabel();
        inputPanel2 = new javax.swing.JTextField();
        inputPanelText3 = new javax.swing.JLabel();
        inputPanel3 = new javax.swing.JTextField();
        inputPanelText4 = new javax.swing.JLabel();
        inputPanel4Panel = new javax.swing.JScrollPane();
        inputPanel4 = new javax.swing.JTextArea();
        inputPanelText5 = new javax.swing.JLabel();
        inputPanel5 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        manageOrdersIU.setText("Manage Orders");
        manageOrdersIU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageOrdersIUActionPerformed(evt);
            }
        });

        manageSuppliersIU.setText("Manage Suppliers");
        manageSuppliersIU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageSuppliersIUActionPerformed(evt);
            }
        });

        manageProductsIU.setText("Manage Products");
        manageProductsIU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageProductActionPerformed(evt);
            }
        });

        createIU.setText("Add");
        createIU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createIUActionPerformed(evt);
            }
        });

        updateIU.setText("Update");
        updateIU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateIUActionPerformed(evt);
            }
        });

        deleteIU.setText("Delete");
        deleteIU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteIUActionPerformed(evt);
            }
        });

        sendOrderIU.setText("Send Order");
        sendOrderIU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendOrderIUActionPerformed(evt);
            }
        });

        commandSC.setText("Please select an item");

        catalogIC.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        catalogIC.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                catalogICValueChanged(evt);
            }
        });
        CatalogICPanel.setViewportView(catalogIC);

        authenticatioonSU.setText("Login Identification Text");

        idSC.setText("ID :");

        idOC.setText("0");

        productSC.setText("Product Name:");

        productOC.setText("0");

        supplierSC.setText("Supplier Name:");

        supplierOC.setText("0");

        inputPanelText1.setText("Minimum Stock Level");

        inputPanel1.setText("enter minimum stock level");
        inputPanel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputPanel1ActionPerformed(evt);
            }
        });

        inputPanelText2.setText("Maximum  Stock Level");

        inputPanel2.setText("enter maximum stock level");

        inputPanelText3.setText("Current Stock Level");

        inputPanel3.setText("enter current stock level");

        inputPanelText4.setText("Description");

        inputPanel4.setColumns(20);
        inputPanel4.setRows(5);
        inputPanel4.setText("enter description about product\n");
        inputPanel4Panel.setViewportView(inputPanel4);

        inputPanelText5.setText("Current Stock Level");

        inputPanel5.setText("enter current stock level");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(manageOrdersIU, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(manageSuppliersIU, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                    .addComponent(manageProductsIU, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(commandSC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(authenticatioonSU, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(createIU, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(deleteIU, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(CatalogICPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputPanelText2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inputPanelText3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inputPanelText1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inputPanelText5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(inputPanelText4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(inputPanel2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(inputPanel3, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(inputPanel1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(inputPanel4Panel, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(inputPanel5, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(sendOrderIU, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(updateIU, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(idSC, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(idOC, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(productOC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(productSC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(supplierOC, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(supplierSC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(authenticatioonSU)
                    .addComponent(commandSC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(idSC, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(idOC))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(productSC)
                                .addComponent(supplierSC))
                            .addGap(3, 3, 3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(productOC)
                                .addComponent(supplierOC))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(inputPanelText1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(inputPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(inputPanelText2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(inputPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(inputPanelText3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(inputPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(inputPanelText5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(inputPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(inputPanelText4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(inputPanel4Panel, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(CatalogICPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(manageProductsIU)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(manageSuppliersIU)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(manageOrdersIU)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sendOrderIU)
                    .addComponent(updateIU)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(createIU)
                            .addComponent(deleteIU))
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Command Functions
    public void inform(String info) {
        commandSC.setText(info);
    }

    public void clearLog() {
        inputPanel4.setText("");
    }

    public void addLog(String log) {
        inputPanel4.append(log + "\n");
    }

    public void addItemToCatalog(String item) {
        catalogModel.addElement(item);
    }

    public void purgeCatalog() {
        catalogModel.removeAllElements();
    }

    public void updateUIFields(String uiType) {
        switch (uiType) {
            case "Product":
                productSC.setVisible(false);
                productOC.setVisible(false);
                supplierSC.setVisible(false);
                supplierOC.setVisible(false);

                inputPanelText1.setText("Minimum Stock Level");
                inputPanel1.setText("enter minimum stock level");

                inputPanelText2.setText("Maximum Stock Level");
                inputPanel2.setText("enter maximum stock level");

                inputPanelText2.setVisible(true);
                inputPanel2.setVisible(true);

                inputPanelText3.setVisible(true);
                inputPanel3.setVisible(true);

                inputPanelText3.setText("Current Stock Level");
                inputPanel3.setText("enter current stock level");

                inputPanelText4.setVisible(true);
                inputPanel4.setVisible(true);
                inputPanelText4.setText("Description");
                inputPanel4.setText("enter description about product");
                
                inputPanelText5.setVisible(false);
                inputPanel5.setVisible(false);
                sendOrderIU.setVisible(false);
                break;
            case "Supplier":
                productSC.setVisible(true);
                productOC.setVisible(true);
                supplierSC.setVisible(false);
                supplierOC.setVisible(false);

                inputPanelText1.setText("Product ID");
                inputPanel1.setText("enter Product ID");

                inputPanelText2.setVisible(false);
                inputPanel2.setVisible(false);

                inputPanelText3.setVisible(false);
                inputPanel3.setVisible(false);

                inputPanelText4.setVisible(true);
                inputPanel4.setVisible(true);
                inputPanelText4.setText("Name");
                inputPanel4.setText("enter name of the Supplier");
                
                inputPanelText5.setVisible(false);
                inputPanel5.setVisible(false);
                sendOrderIU.setVisible(false);
                break;
            case "Order":
                productSC.setVisible(true);
                productOC.setVisible(true);
                supplierSC.setVisible(true);
                supplierOC.setVisible(true);
        
                inputPanelText1.setText("Product ID");
                inputPanel1.setText("enter Product ID");

                inputPanelText2.setText("Supplier ID");
                inputPanel2.setText("enter Supplier ID");

                inputPanelText2.setVisible(true);
                inputPanel2.setVisible(true);

                inputPanelText3.setText("Quantity");
                inputPanel3.setText("enter quantity");

                inputPanelText3.setVisible(true);
                inputPanel3.setVisible(true);

                inputPanelText4.setVisible(false);
                inputPanel4.setVisible(false);
                
                inputPanelText5.setText("Order Date");
                inputPanel5.setText("enter order date");
                
                inputPanelText5.setVisible(true);
                inputPanel5.setVisible(true);
                sendOrderIU.setVisible(true);
                break;
            default:
                break;
        }
    }

    public void presentProductDetails(String a, String b, String c, String d, String e) {
        if(managementMode == 3) {
            idOC.setText("" + b); // order Id
            inputPanel1.setText("" + a); // product id
            inputPanel2.setText("" + c); // supp id
            inputPanel3.setText("" + d); // quantity
            inputPanel5.setText("" + e); // date
        
        } else if(managementMode == 2){
            idOC.setText("" + c); // ProductID
            inputPanel4.setText(b); // Name
            inputPanel1.setText("" + a); // Supp Id       
        } else if (managementMode == 1) {
            idOC.setText("" + a);
            inputPanel4.setText(b);
            inputPanel1.setText("" + c);
            inputPanel2.setText("" + d);
            inputPanel3.setText("" + e);
        }
    }
    
    public void additionalInfo(String product, String supplier, int index) {
        productOC.setText(product);
        supplierOC.setText(supplier);
        //catalogIC.setSelectedIndex(index);
    
    }

        private void updateIUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateIUActionPerformed
            String a = "";
            String b = "";
            String c = "";
            String d = "";  
            String e = "";

            if (catalogIC.getSelectedIndex() != -1) {
                
                if (managementMode == 3) {
                    b = idOC.getText();
                    a = inputPanel1.getText();
                    c = inputPanel2.getText();
                    d = inputPanel3.getText();
                    e = inputPanel5.getText();
                } else if (managementMode == 2) {
                    c = idOC.getText();
                    b = inputPanel4.getText();
                    a = inputPanel1.getText();
                    d = inputPanel2.getText();
                    e = inputPanel3.getText();
                } else if (managementMode == 1) {
                    a = idOC.getText();
                    b = inputPanel4.getText();
                    c = inputPanel1.getText();
                    d = inputPanel2.getText();
                    e = inputPanel3.getText();
                }

                inventory.updateItem(managementMode, a, b, c, d, e);
            } //else { System.out.println("select item");}

    }//GEN-LAST:event_updateIUActionPerformed

    // INPUT UNITS

    private void manageProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageProductActionPerformed
        //manageOrdersIU.setEnabled(true);
        // Delegate
        updateUIFields("Product");
        managementMode = 1;
        inventory.manageCatalog(managementMode);
    }//GEN-LAST:event_manageProductActionPerformed

    private void manageSuppliersIUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageSuppliersIUActionPerformed
        updateUIFields("Supplier");
        managementMode = 2;
        inventory.manageCatalog(managementMode);
    }//GEN-LAST:event_manageSuppliersIUActionPerformed

    private void manageOrdersIUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageOrdersIUActionPerformed
        updateUIFields("Order");
        managementMode = 3;
        inventory.manageCatalog(managementMode);
    }//GEN-LAST:event_manageOrdersIUActionPerformed

    private void deleteIUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteIUActionPerformed
        String item = idOC.getText();
        inventory.deleteItem(managementMode, item);

    }//GEN-LAST:event_deleteIUActionPerformed

    public void orderShowMax(int max) {
        inputPanelText3.setText("Quantity [max= " + max + "]");
    }

    public void indicateLow(String item) {
//        catalogIC.setSelectedIndex(catalogIC.getLastVisibleIndex());
//        catalogIC.setSelectionBackground(Color.red);
    }

    private void createIUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createIUActionPerformed

        String b = inputPanel4.getText();
        String c = inputPanel1.getText();
        String d = inputPanel2.getText();
        String e = inputPanel3.getText();

        inventory.addItem(managementMode, b, c, d, e);
    }//GEN-LAST:event_createIUActionPerformed

    private void inputPanel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputPanel1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputPanel1ActionPerformed

    private void catalogICValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_catalogICValueChanged
        int index = catalogIC.getSelectedIndex() + 1;
        inventory.getDetails(managementMode, index);
    }//GEN-LAST:event_catalogICValueChanged

    private void sendOrderIUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendOrderIUActionPerformed
        

        String productName = productOC.getText();
        String quantity = inputPanel3.getText(); // quantity
        String date = inputPanel5.getText(); // date

        
        // Product name, quantity, date
        inventory.sendOrder(productName, quantity, date);
    }//GEN-LAST:event_sendOrderIUActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new MainWindow().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane CatalogICPanel;
    private javax.swing.JLabel authenticatioonSU;
    private javax.swing.JList<String> catalogIC;
    private javax.swing.JLabel commandSC;
    private javax.swing.JButton createIU;
    private javax.swing.JButton deleteIU;
    private javax.swing.JLabel idOC;
    private javax.swing.JLabel idSC;
    private javax.swing.JTextField inputPanel1;
    private javax.swing.JTextField inputPanel2;
    private javax.swing.JTextField inputPanel3;
    private javax.swing.JTextArea inputPanel4;
    private javax.swing.JScrollPane inputPanel4Panel;
    private javax.swing.JTextField inputPanel5;
    private javax.swing.JLabel inputPanelText1;
    private javax.swing.JLabel inputPanelText2;
    private javax.swing.JLabel inputPanelText3;
    private javax.swing.JLabel inputPanelText4;
    private javax.swing.JLabel inputPanelText5;
    private javax.swing.JButton manageOrdersIU;
    private javax.swing.JButton manageProductsIU;
    private javax.swing.JButton manageSuppliersIU;
    private javax.swing.JLabel productOC;
    private javax.swing.JLabel productSC;
    private javax.swing.JButton sendOrderIU;
    private javax.swing.JLabel supplierOC;
    private javax.swing.JLabel supplierSC;
    private javax.swing.JButton updateIU;
    // End of variables declaration//GEN-END:variables

}
